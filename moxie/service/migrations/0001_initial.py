# Generated by Django 5.1.2 on 2024-10-21 16:38

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("medspa", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="ServiceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Injectables", "Injectables"),
                            ("Peels", "Peels"),
                            ("Fat Disolving", "Fat Disolving"),
                            ("Sclerotherapy", "Sclerotherapy"),
                            ("Threads", "Threads"),
                            ("Weightloss", "Weightloss"),
                            ("IV Therapy", "Iv Therapy"),
                            ("Vitamin Injection", "Vitamin Injection"),
                            ("Peptyde Therapy", "Peptide Therapy"),
                            ("Ultrasound", "Ultrasound"),
                            ("Facials", "Facials"),
                            ("Other Non Medical", "Other Non Medical"),
                            ("Consultation", "Consultation"),
                            ("Follow Up", "Follow Up"),
                            ("Other", "Other"),
                        ],
                        max_length=100,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("duration", models.DurationField()),
                (
                    "medspa",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="medspa.medspa"
                    ),
                ),
                (
                    "products",
                    models.ManyToManyField(
                        related_name="services", to="service.product"
                    ),
                ),
                (
                    "service_types",
                    models.ManyToManyField(
                        related_name="services", to="service.servicetype"
                    ),
                ),
                (
                    "suppliers",
                    models.ManyToManyField(
                        related_name="services", to="service.supplier"
                    ),
                ),
            ],
            options={
                "verbose_name": "Service",
                "verbose_name_plural": "Services",
            },
        ),
    ]
